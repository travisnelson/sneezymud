# hey emacs, this is -*- python -*-

Import('env');

# library targets
libcmd=env.SharedLibrary(target='cmd', source=Glob('cmd/*.cc'))
libdisc=env.SharedLibrary(target='disc', source=Glob('disc/*.cc'))
libgame=env.SharedLibrary(target='game', source=Glob('game/*.cc'))
libmisc=env.SharedLibrary(target='misc', source=Glob('misc/*.cc'))
libobj=env.SharedLibrary(target='obj', source=Glob('obj/*.cc'))
libspec=env.SharedLibrary(target='spec', source=Glob('spec/*.cc'))
libsys=env.SharedLibrary(target='sys', source=Glob('sys/*.cc'))
libtask=env.SharedLibrary(target='task', source=Glob('task/*.cc'))

libs=[libcmd, libdisc, libgame, libmisc,
      libobj, libspec, libsys, libtask,
      'libcares' ]

# main binary
sneezy=env.Program('sneezy', 'main.cc', LIBS=[libs, 'libcares'])
env.InstallAs('../sneezy', sneezy)

# low tools
lto=env.Object('low/lowtools.cc');

amap=env.Program(['low/amap.cc', lto], LIBS=libs)
sqladdmobs=env.Program(['low/sqladdmobs.cc', lto], LIBS=libs)
sqladdobjs=env.Program(['low/sqladdobjs.cc', lto], LIBS=libs)
sqladdresp=env.Program(['low/sqladdresp.cc', lto], LIBS=libs)
sqladdwld=env.Program(['low/sqladdwld.cc', lto], LIBS=libs)
sqledimmobj=env.Program(['low/sqledimmobj.cc', lto], LIBS=libs)
sqledmob=env.Program(['low/sqledmob.cc', lto], LIBS=libs)
sqledobj=env.Program(['low/sqledobj.cc', lto], LIBS=libs)
sqledresp=env.Program(['low/sqledresp.cc', lto], LIBS=libs)
sqledshop=env.Program(['low/sqledshop.cc', lto], LIBS=libs)
sqledwld=env.Program(['low/sqledwld.cc', lto], LIBS=libs)

env.Install('../lowtools', [amap, sqladdmobs, sqladdobjs, sqladdresp,
                            sqladdwld, sqledimmobj, sqledmob, sqledobj,
                            sqledresp, sqledshop, sqledwld])
env.Alias('lowtools', '../lowtools')

# cgi
cgi=env.Object('cgi/session.cgi.cc')

mudmail=env.Program(['cgi/mudmail.cgi.cc', cgi], LIBS=libs)

env.Install('../cgi', [mudmail])
env.Alias('cgi', '../cgi')

# shell tools
econ=env.Program(['shell/econ.cc'], LIBS=libs)

env.Install('../shell', [econ])
env.Alias('shell', '../shell')


# unit tests
env.SConscript('tests/SConscript',
               exports='libs')
